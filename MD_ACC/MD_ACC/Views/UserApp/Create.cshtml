@model MD_ACC.Models.T_USER_APP

@{
    ViewBag.Title = "Create";
}
<head>
    <title>Thêm thông tin</title>
</head>

<section class="pcoded-main-container">
    <div class="pcoded-content">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <h5>Thêm thông tin tài khoản</h5>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="row">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        
                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.PK_ID, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PK_ID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PK_ID, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>



                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

                        </div>


                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.StationID, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.StationID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StationID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.SV_ID, htmlAttributes: new { @class = "control-label " })
                            @Html.EditorFor(model => model.SV_ID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SV_ID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.NStationID, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.NStationID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NStationID, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 d-flex justify-content-between mb-3">
                            <a href="@Url.Action("Index", "UserApp")" class="btn btn-primary text-white">Back to List</a>
                            <button type="submit" class="btn btn-primary text-white">Create</button>
                        </div>

                    </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>


